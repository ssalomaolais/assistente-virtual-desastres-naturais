# Assistente Virtual para Orienta√ß√µes em Desastres Naturais

![Badge de Tecnologia](https://img.shields.io/badge/Tecnologia-Engenharia%20de%20Prompt-blue)
![Badge de Linguagem](https://img.shields.io/badge/Linguagem-Python-yellow)

## üìñ Descri√ß√£o

[cite_start]Este projeto, desenvolvido como parte da Global Solution da FIAP, consiste na cria√ß√£o de um assistente virtual especializado em fornecer orienta√ß√µes claras e emp√°ticas durante desastres naturais.  Utilizando t√©cnicas de **Engenharia de Prompt**, o assistente √© projetado para contextualizar suas respostas de acordo com tr√™s perfis de usu√°rio:

* [cite_start]**V√≠timas diretas:** Pessoas que precisam de instru√ß√µes de seguran√ßa imediatas. [cite: 7]
* [cite_start]**Moradores da regi√£o:** Buscando informa√ß√µes sobre medidas preventivas e atualiza√ß√µes. [cite: 8]
* [cite_start]**Familiares:** Procurando orienta√ß√µes sobre como ajudar ou localizar seus entes queridos. [cite: 9]

[cite_start]O notebook do projeto demonstra a aplica√ß√£o de diferentes t√©cnicas de prompt, como *role prompting* e *few-shot learning*, para garantir que o modelo de linguagem gere respostas precisas, √∫teis e com o tom adequado para cada situa√ß√£o cr√≠tica. [cite: 11]

## üéØ Objetivos do Projeto

* [cite_start]**Aplicar t√©cnicas de Engenharia de Prompt** para refinar e controlar as respostas de um modelo de linguagem. [cite: 11]
* [cite_start]**Desenvolver prompts sens√≠veis ao contexto** e ao perfil emocional do usu√°rio. [cite: 12]
* [cite_start]**Explorar os desafios √©ticos** de projetar assistentes para situa√ß√µes cr√≠ticas, garantindo informa√ß√µes precisas e respons√°veis. [cite: 13]
* [cite_start]**Testar e avaliar** como diferentes estruturas de prompt influenciam a qualidade das respostas geradas. [cite: 14]

## üõ†Ô∏è Tecnologias Utilizadas

* **Linguagem:** Python
* **Ambiente:** Google Colab
* **T√©cnica Principal:** Engenharia de Prompt
* **Modelo de Linguagem:** API do Google Gemini (ou a que voc√™ utilizou)

## üöÄ Como Executar o Projeto

Para rodar o notebook e testar os prompts, siga os passos abaixo:

1.  **Clone o reposit√≥rio:**
    ```bash
    git clone [https://github.com/SEU-USUARIO/assistente-desastres-naturais.git](https://github.com/SEU-USUARIO/assistente-desastres-naturais.git)
    cd assistente-desastres-naturais
    ```

2.  **Crie um ambiente virtual (recomendado):**
    ```bash
    python -m venv venv
    source venv/bin/activate  # No Windows: venv\Scripts\activate
    ```

3.  **Instale as depend√™ncias:**
    ```bash
    pip install -r requirements.txt
    ```

4.  **Configure sua chave de API:**
    * O notebook requer uma chave de API para o modelo de linguagem (ex: Google Gemini).
    * √â uma boa pr√°tica n√£o deixar a chave vis√≠vel no c√≥digo. Configure-a como uma vari√°vel de ambiente ou utilize o sistema de "Secrets" do Google Colab.

5.  **Execute o Notebook:**
    * Abra o arquivo `notebook_assistente_virtual.ipynb` em um ambiente Jupyter (como Jupyter Lab ou VS Code) ou fa√ßa o upload para o Google Colab para executar as c√©lulas de c√≥digo.

